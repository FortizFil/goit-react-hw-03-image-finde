{"version":3,"sources":["components/Searchbar/searchbar.jsx","components/ImageGalleryItem/imageGalleryItem.jsx","components/ImageGallery/imageGallery.jsx","components/Button/button.jsx","components/PhotoApi/photoApi.jsx","components/Loader/Loader.jsx","components/Modal/Modal.jsx","App.js","index.js"],"names":["SearchBar","state","photo","handleNameChange","event","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","className","this","type","placeholder","onChange","Component","ImageGalleryItem","handleOnClick","e","onClick","largeImageURL","src","photoUrl","alt","name","ImageGallery","photos","map","id","webformatURL","onSelect","Button","onClickLoadMore","window","scrollTo","top","document","documentElement","scrollHeight","behavior","api","fetchPhoto","page","fetch","then","response","json","Loader","color","height","width","Modal","handleCloseModal","target","closeModal","onClose","handleEscKey","code","addEventListener","removeEventListener","App","status","showButton","modalIsOpen","handleFormSubmit","handleSelectImage","largeImageUrl","onButton","prevState","nextName","nextPage","photoAPI","hits","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"qQA8CeA,E,4MA1CbC,MAAQ,CACNC,MAAO,I,EAGTC,iBAAmB,SAAAC,GACjB,EAAKC,SAAS,CAAEH,MAAOE,EAAME,cAAcC,MAAMC,iB,EAEnDC,aAAe,SAAAL,GACbA,EAAMM,iBAE0B,KAA5B,EAAKT,MAAMC,MAAMS,SAIrB,EAAKC,MAAMC,SAAS,EAAKZ,MAAMC,OAC/B,EAAKG,SAAS,CAAEH,MAAO,O,4CAEzB,WACE,OACE,wBAAQY,UAAU,YAAlB,SACE,uBAAMD,SAAUE,KAAKN,aAAcK,UAAU,aAA7C,UACE,wBAAQE,KAAK,SAASF,UAAU,oBAAhC,SACE,sBAAMA,UAAU,0BAAhB,sBAGF,uBACEA,UAAU,mBACVE,KAAK,OACLC,YAAY,2BACZV,MAAOQ,KAAKd,MAAMC,MAClBgB,SAAUH,KAAKZ,4B,GA/BHgB,aCsBTC,E,4MAtBbC,cAAgB,SAAAC,GACd,EAAKV,MAAMW,QAAQ,EAAKX,MAAMY,gB,4CAEhC,WACE,OACE,oBAAIV,UAAU,mBAAmBS,QAASR,KAAKM,cAA/C,SACE,qBACEI,IAAKV,KAAKH,MAAMc,SAChBC,IAAKZ,KAAKH,MAAMgB,KAChBd,UAAU,iC,GAVWK,aCyBhBU,E,4JAtBb,WAAU,IAAD,OACCC,EAAWf,KAAKH,MAAhBkB,OAER,OACE,oBAAIhB,UAAU,eAAd,SACGgB,EAAOC,KAAI,SAAA7B,GAAK,OACf,cAAC,EAAD,CAEE0B,KAAM1B,EAAM8B,GACZN,SAAUxB,EAAM+B,aAChBT,cAAetB,EAAMsB,cACrBD,QAAS,kBAAM,EAAKX,MAAMsB,SAAShC,EAAMsB,iBAJpCtB,EAAM+B,uB,GARId,aCmBZgB,EAtBA,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBAKhB,OAJAC,OAAOC,SAAS,CACdC,IAAKC,SAASC,gBAAgBC,aAC9BC,SAAU,WAGV,wBACE3B,KAAK,SACLF,UAAU,SACVS,QAAS,WACPa,KAJJ,SAOE,gDCNN,IAIeQ,EAJH,CACVC,WATF,SAAoBjB,EAAMkB,GACxB,OAAOC,MAAM,8BAAD,OACoBnB,EADpB,iBACiCkB,EADjC,gGAEVE,MAAK,SAAAC,GACL,OAAOA,EAASC,Y,iBCKLC,EARA,WACb,OACE,qBAAKrC,UAAU,UAAf,SACE,cAAC,IAAD,CAAeE,KAAK,OAAOoC,MAAM,UAAUC,OAAQ,IAAKC,MAAO,SCqCtDC,E,4MAtCbC,iBAAmB,SAAAlC,GACbA,EAAEmC,SAAWnC,EAAEhB,eACjB,EAAKoD,c,EAITA,WAAa,WACX,EAAK9C,MAAM+C,W,EAGbC,aAAe,SAAAtC,GACE,WAAXA,EAAEuC,MAAmB,EAAKH,c,uDAGhC,WACErB,OAAOyB,iBAAiB,UAAW/C,KAAK6C,gB,kCAG1C,WACEvB,OAAO0B,oBAAoB,UAAWhD,KAAK6C,gB,oBAG7C,WACE,OACE,qBAAK9C,UAAU,UAAUS,QAASR,KAAKyC,iBAAvC,SACE,qBAAK1C,UAAU,QAAf,SACE,qBAAKW,IAAKV,KAAKH,MAAMY,cAAeG,IAAI,a,GA3B9BR,aC0EL6C,E,4MAnEb/D,MAAQ,CACN2B,KAAM,GACNE,OAAQ,GACRgB,KAAM,EACNmB,OAAQ,OACRC,YAAY,EACZC,YAAa,M,EAGfC,iBAAmB,SAAAxC,GACjB,EAAKvB,SAAS,CAAEuB,OAAMqC,OAAQ,OAAQnC,OAAQ,GAAIgB,KAAM,K,EAG1DuB,kBAAoB,SAAAC,GAClB,EAAKjE,SAAS,CAAE8D,YAAaG,K,EAG/Bd,iBAAmB,WACjB,EAAKnD,SAAS,CAAE8D,YAAa,Q,EAqB/BI,SAAW,WACT,EAAKlE,UAAS,SAAAmE,GAAS,MAAK,CAC1B1B,KAAM0B,EAAU1B,KAAO,EACvBmB,OAAQ,Y,wDArBZ,WAAsB,IAAD,OACbQ,EAAW1D,KAAKd,MAAM2B,KACtB8C,EAAW3D,KAAKd,MAAM6C,KACF,SAAtB/B,KAAKd,MAAMgE,QACbU,EAAS9B,WAAW4B,EAAUC,GAAU1B,MAAK,SAAAlB,GAChB,IAAvBA,EAAO8C,KAAKC,QAAoC,IAApB,EAAK5E,MAAM6C,KAI3C,EAAKzC,SAAS,CACZyB,OAAO,GAAD,mBAAM,EAAK7B,MAAM6B,QAAjB,YAA4BA,EAAO8C,OACzCX,OAAQ,WACRC,YAAY,IANZ,EAAK7D,SAAS,CAAE4D,OAAQ,OAAQC,YAAY,S,oBAmBpD,WACE,OACE,qCACE,cAAC,EAAD,CAAWrD,SAAUE,KAAKqD,mBAC1B,cAAC,EAAD,CACEtC,OAAQf,KAAKd,MAAM6B,OACnBI,SAAUnB,KAAKsD,oBAEM,SAAtBtD,KAAKd,MAAMgE,QAAqB,cAAC,EAAD,IAChClD,KAAKd,MAAMiE,YAAc,cAAC,EAAD,CAAQ9B,gBAAiBrB,KAAKwD,WACvDxD,KAAKd,MAAMkE,aACV,cAAC,EAAD,CACE3C,cAAeT,KAAKd,MAAMkE,YAC1BR,QAAS5C,KAAKyC,0B,GA5DRrC,aCHlB2D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxC,SAASyC,eAAe,W","file":"static/js/main.ba817aa3.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass SearchBar extends Component {\r\n  state = {\r\n    photo: '',\r\n  };\r\n\r\n  handleNameChange = event => {\r\n    this.setState({ photo: event.currentTarget.value.toLowerCase() });\r\n  };\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    if (this.state.photo.trim() === '') {\r\n      return;\r\n    }\r\n\r\n    this.props.onSubmit(this.state.photo);\r\n    this.setState({ photo: '' });\r\n  };\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form onSubmit={this.handleSubmit} className=\"SearchForm\">\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            placeholder=\"Search images and photos\"\r\n            value={this.state.photo}\r\n            onChange={this.handleNameChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nSearchBar.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default SearchBar;\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nclass ImageGalleryItem extends Component {\r\n  handleOnClick = e => {\r\n    this.props.onClick(this.props.largeImageURL);\r\n  };\r\n  render() {\r\n    return (\r\n      <li className=\"ImageGalleryItem\" onClick={this.handleOnClick}>\r\n        <img\r\n          src={this.props.photoUrl}\r\n          alt={this.props.name}\r\n          className=\"ImageGalleryItem-image\"\r\n        />\r\n      </li>\r\n    );\r\n  }\r\n}\r\nImageGalleryItem.propTypes = {\r\n  photoUrl: PropTypes.string,\r\n  name: PropTypes.number,\r\n  onClick: PropTypes.func,\r\n  largeImageURL: PropTypes.string,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '../ImageGalleryItem/imageGalleryItem';\r\n\r\nclass ImageGallery extends Component {\r\n  render() {\r\n    const { photos } = this.props;\r\n\r\n    return (\r\n      <ul className=\"ImageGallery\">\r\n        {photos.map(photo => (\r\n          <ImageGalleryItem\r\n            key={photo.webformatURL}\r\n            name={photo.id}\r\n            photoUrl={photo.webformatURL}\r\n            largeImageURL={photo.largeImageURL}\r\n            onClick={() => this.props.onSelect(photo.largeImageURL)}\r\n          />\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\nImageGallery.propTypes = {\r\n  photos: PropTypes.array,\r\n  onSelect: PropTypes.func,\r\n};\r\nexport default ImageGallery;\r\n","import PropTypes from 'prop-types';\r\nconst Button = ({ onClickLoadMore }) => {\r\n  window.scrollTo({\r\n    top: document.documentElement.scrollHeight,\r\n    behavior: 'smooth',\r\n  });\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      className=\"Button\"\r\n      onClick={() => {\r\n        onClickLoadMore();\r\n      }}\r\n    >\r\n      <span>Load More</span>\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default Button;\r\n","function fetchPhoto(name, page) {\r\n  return fetch(\r\n    `https://pixabay.com/api/?q=${name}&page=${page}&key=22670946-2b796d5e22242051989a80e4c&image_type=photo&orientation=horizontal&per_page=12`,\r\n  ).then(response => {\r\n    return response.json();\r\n  });\r\n}\r\n\r\nconst api = {\r\n  fetchPhoto,\r\n};\r\n\r\nexport default api;\r\n","import LoaderSpinner from 'react-loader-spinner';\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"Overlay\">\r\n      <LoaderSpinner type=\"Puff\" color=\"#00BFFF\" height={100} width={100} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nclass Modal extends Component {\r\n  handleCloseModal = e => {\r\n    if (e.target === e.currentTarget) {\r\n      this.closeModal();\r\n    }\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.props.onClose();\r\n  };\r\n\r\n  handleEscKey = e => {\r\n    if (e.code === 'Escape') this.closeModal();\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleEscKey);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleEscKey);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Overlay\" onClick={this.handleCloseModal}>\r\n        <div className=\"Modal\">\r\n          <img src={this.props.largeImageURL} alt=\"\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func,\r\n  largeImageURL: PropTypes.string,\r\n};\r\n\r\nexport default Modal;\r\n","import { Component } from 'react';\nimport SearchBar from './components/Searchbar/searchbar';\nimport ImageGallery from './components/ImageGallery/imageGallery';\nimport Button from './components/Button/button';\nimport photoAPI from './components/PhotoApi/photoApi';\nimport Loader from './components/Loader/Loader';\nimport Modal from './components/Modal/Modal';\n\nclass App extends Component {\n  state = {\n    name: '',\n    photos: [],\n    page: 1,\n    status: 'idle',\n    showButton: false,\n    modalIsOpen: null,\n  };\n\n  handleFormSubmit = name => {\n    this.setState({ name, status: 'load', photos: [], page: 1 });\n  };\n\n  handleSelectImage = largeImageUrl => {\n    this.setState({ modalIsOpen: largeImageUrl });\n  };\n\n  handleCloseModal = () => {\n    this.setState({ modalIsOpen: null });\n  };\n\n  componentDidUpdate() {\n    const nextName = this.state.name;\n    const nextPage = this.state.page;\n    if (this.state.status === 'load') {\n      photoAPI.fetchPhoto(nextName, nextPage).then(photos => {\n        if (photos.hits.length === 0 && this.state.page === 1) {\n          this.setState({ status: 'idle', showButton: false });\n          return;\n        }\n        this.setState({\n          photos: [...this.state.photos, ...photos.hits],\n          status: 'resolved',\n          showButton: true,\n        });\n      });\n    }\n  }\n\n  onButton = () => {\n    this.setState(prevState => ({\n      page: prevState.page + 1,\n      status: 'load',\n    }));\n  };\n\n  render() {\n    return (\n      <>\n        <SearchBar onSubmit={this.handleFormSubmit} />\n        <ImageGallery\n          photos={this.state.photos}\n          onSelect={this.handleSelectImage}\n        />\n        {this.state.status === 'load' && <Loader />}\n        {this.state.showButton && <Button onClickLoadMore={this.onButton} />}\n        {this.state.modalIsOpen && (\n          <Modal\n            largeImageURL={this.state.modalIsOpen}\n            onClose={this.handleCloseModal}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}